Running ALEX3
---------------

Last UPDATED: December 2014, by JJGC

ALEX3 is organised in a series of directories:

JJs-MacBook-Air:alex3 jjgomezcadenas$ pwd
/Users/jjgomezcadenas/Development/devnext/alex3
JJs-MacBook-Air:alex3 jjgomezcadenas$ ls

CMakeLists.txt alexMain       cmake          isvc           util
INSTALL.txt    base           config         jjalgos        ksvc

Directory util contains utilities, such as string manipulation, singleton definition, etc. For example:

JJs-MacBook-Air:alex3 jjgomezcadenas$ ls util
LogUtil.cpp          SingletonTemplate.h  StringOperations.h
LogUtil.h            StringOperations.cpp

Directory config contains the code needed for configuring alex3:

jjgomezcadenas$ ls config/
AConfigSvc.cpp    AlexConfigure.h   DHisto.cpp        DParam.h
AConfigSvc.h      DArray.cpp        DHistos.h         xConfigure.cxx
AlexConfigure.cpp DArray.h          DParam.cpp

alex3 uses xml definitions to configure the main job. The files in config/ are used by alex3 to parse xml files and eventually generate the needed code snippets (more on that later)

In addition, directory config contains the file xConfigure.cxx, which becomes the executable xConfigure upon compilation. To run xConfigure we do:

xConfigure <pathToMain> <pathToAlgos>

where  <pathToMain> is the directory where the main program is located (normally under the same alex3 directory, eg: <pathToMain>= /Users/jjgomezcadenas/Development/devnext/alex3/alexMain) and <pathToAlgos> is the directory that contain the alex3 algorithms, for example:
<pathToAlgos> =/Users/jjgomezcadenas/Development/devnext/alex3/jjalgos

What xConfigure does is to read the xml defining the various algorithms and generate the needed code (.hh and .cxx files). The configuration of alex3 is defined by several xml files that must be present in the Algo directory. 
For example:

JJs-MacBook-Air:alex3 jjgomezcadenas$ cd jjalgos/
JJs-MacBook-Air:jjalgos jjgomezcadenas$ ls
AlexConfig.xml AlgoConfig.xml DrawHits.cpp   DrawHits.xml

The file AlexConfig.xml defines general things such as DST input file, histo output file, number of events and such.
The File AlgoConfig.xml provides the list of algorithms to be executed.
In the example there is only one algorithm (DrawHist.xml). The user needs to provide DrawHits.cpp with the Init() Execute() and End() methods. The header and auxiliary code needed to run the algorithm is generated by xConfigure

---
Notice that xConfigure must be run after defining the xml code before compiling alexMain. If you try to compile alexMain and get an error (.hh or .cxx files missing) try first to run xConfigure


